Terminals unused in grammar

    TOKEN_COMMA


Grammar

    0 $accept: program $end

    1 program: class_declaration

    2 class_body_items: ε
    3                 | class_body_items variable_declaration TOKEN_SEMICOLON
    4                 | class_body_items main_method_declaration

    5 class_declaration: TOKEN_CLASS identifier TOKEN_LBRACE class_body_items TOKEN_RBRACE

    6 main_method_declaration: TOKEN_PUBLIC TOKEN_STATIC TOKEN_VOID identifier TOKEN_LPAREN TOKEN_RPAREN block_statement_core

    7 statements: ε
    8           | statement statements

    9 statement: variable_declaration TOKEN_SEMICOLON
   10          | assignment_core TOKEN_SEMICOLON
   11          | if_statement_core
   12          | while_statement_core
   13          | print_statement_core TOKEN_SEMICOLON
   14          | return_statement_core TOKEN_SEMICOLON
   15          | block_statement_core

   16 block_statement_core: TOKEN_LBRACE statements TOKEN_RBRACE

   17 variable_declaration: type identifier
   18                     | type identifier TOKEN_ASSIGN expression
   19                     | TOKEN_FINAL type identifier TOKEN_ASSIGN expression

   20 type: TOKEN_INT
   21     | TOKEN_CHAR
   22     | TOKEN_BOOLEAN
   23     | TOKEN_INT TOKEN_LBRACKET TOKEN_RBRACKET

   24 assignment_core: identifier TOKEN_ASSIGN expression
   25                | identifier TOKEN_LBRACKET expression TOKEN_RBRACKET TOKEN_ASSIGN expression

   26 if_statement_core: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN statement
   27                  | TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN statement TOKEN_ELSE statement

   28 while_statement_core: TOKEN_WHILE TOKEN_LPAREN expression TOKEN_RPAREN statement

   29 print_statement_core: TOKEN_PRINT TOKEN_LPAREN expression TOKEN_RPAREN

   30 return_statement_core: TOKEN_RETURN
   31                      | TOKEN_RETURN expression

   32 expression: logical_or_expression

   33 logical_or_expression: logical_and_expression
   34                      | logical_or_expression TOKEN_OR logical_and_expression

   35 logical_and_expression: equality_expression
   36                       | logical_and_expression TOKEN_AND equality_expression

   37 equality_expression: relational_expression
   38                    | equality_expression TOKEN_EQ relational_expression
   39                    | equality_expression TOKEN_NEQ relational_expression

   40 relational_expression: additive_expression
   41                      | relational_expression TOKEN_LT additive_expression
   42                      | relational_expression TOKEN_GT additive_expression
   43                      | relational_expression TOKEN_LEQ additive_expression
   44                      | relational_expression TOKEN_GEQ additive_expression

   45 additive_expression: multiplicative_expression
   46                    | additive_expression TOKEN_PLUS multiplicative_expression
   47                    | additive_expression TOKEN_MINUS multiplicative_expression

   48 multiplicative_expression: unary_expression
   49                          | multiplicative_expression TOKEN_MULTIPLY unary_expression
   50                          | multiplicative_expression TOKEN_DIVIDE unary_expression
   51                          | multiplicative_expression TOKEN_MOD unary_expression

   52 unary_expression: primary_expression
   53                 | TOKEN_MINUS unary_expression
   54                 | TOKEN_NOT unary_expression

   55 primary_expression: integer_literal
   56                   | float_literal
   57                   | char_literal
   58                   | string_literal
   59                   | TOKEN_TRUE
   60                   | TOKEN_FALSE
   61                   | identifier
   62                   | identifier TOKEN_LBRACKET expression TOKEN_RBRACKET
   63                   | TOKEN_LPAREN expression TOKEN_RPAREN

   64 identifier: TOKEN_ID

   65 integer_literal: TOKEN_INT_LIT

   66 float_literal: TOKEN_FLOAT_LIT

   67 char_literal: TOKEN_CHAR_LIT

   68 string_literal: TOKEN_STRING_LIT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_INT_LIT <int_val> (258) 65
    TOKEN_FLOAT_LIT <float_val> (259) 66
    TOKEN_CHAR_LIT <char_val> (260) 67
    TOKEN_STRING_LIT <string_val> (261) 68
    TOKEN_ID <string_val> (262) 64
    TOKEN_CLASS (263) 5
    TOKEN_PUBLIC (264) 6
    TOKEN_STATIC (265) 6
    TOKEN_VOID (266) 6
    TOKEN_INT (267) 20 23
    TOKEN_CHAR (268) 21
    TOKEN_BOOLEAN (269) 22
    TOKEN_IF (270) 26 27
    TOKEN_ELSE (271) 27
    TOKEN_WHILE (272) 28
    TOKEN_RETURN (273) 30 31
    TOKEN_TRUE (274) 59
    TOKEN_FALSE (275) 60
    TOKEN_FINAL (276) 19
    TOKEN_PRINT (277) 29
    TOKEN_PLUS (278) 46
    TOKEN_MINUS (279) 47 53
    TOKEN_MULTIPLY (280) 49
    TOKEN_DIVIDE (281) 50
    TOKEN_MOD (282) 51
    TOKEN_EQ (283) 38
    TOKEN_NEQ (284) 39
    TOKEN_LT (285) 41
    TOKEN_GT (286) 42
    TOKEN_LEQ (287) 43
    TOKEN_GEQ (288) 44
    TOKEN_AND (289) 36
    TOKEN_OR (290) 34
    TOKEN_NOT (291) 54
    TOKEN_ASSIGN (292) 18 19 24 25
    TOKEN_LPAREN (293) 6 26 27 28 29 63
    TOKEN_RPAREN (294) 6 26 27 28 29 63
    TOKEN_LBRACE (295) 5 16
    TOKEN_RBRACE (296) 5 16
    TOKEN_LBRACKET (297) 23 25 62
    TOKEN_RBRACKET (298) 23 25 62
    TOKEN_SEMICOLON (299) 3 9 10 13 14
    TOKEN_COMMA (300)
    TOKEN_IF_WITHOUT_ELSE (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program <program_node> (48)
        on left: 1
        on right: 0
    class_body_items <parsed_class_contents_ptr> (49)
        on left: 2 3 4
        on right: 3 4 5
    class_declaration <class_decl_node> (50)
        on left: 5
        on right: 1
    main_method_declaration <main_method_node> (51)
        on left: 6
        on right: 4
    statements <statement_list_node> (52)
        on left: 7 8
        on right: 8 16
    statement <statement_node> (53)
        on left: 9 10 11 12 13 14 15
        on right: 8 26 27 28
    block_statement_core <block_stmt_node> (54)
        on left: 16
        on right: 6 15
    variable_declaration <var_decl_node> (55)
        on left: 17 18 19
        on right: 3 9
    type <type_node> (56)
        on left: 20 21 22 23
        on right: 17 18 19
    assignment_core <assignment_node> (57)
        on left: 24 25
        on right: 10
    if_statement_core <if_stmt_node> (58)
        on left: 26 27
        on right: 11
    while_statement_core <while_stmt_node> (59)
        on left: 28
        on right: 12
    print_statement_core <print_stmt_node> (60)
        on left: 29
        on right: 13
    return_statement_core <return_stmt_node> (61)
        on left: 30 31
        on right: 14
    expression <expression_node> (62)
        on left: 32
        on right: 18 19 24 25 26 27 28 29 31 62 63
    logical_or_expression <expression_node> (63)
        on left: 33 34
        on right: 32 34
    logical_and_expression <expression_node> (64)
        on left: 35 36
        on right: 33 34 36
    equality_expression <expression_node> (65)
        on left: 37 38 39
        on right: 35 36 38 39
    relational_expression <expression_node> (66)
        on left: 40 41 42 43 44
        on right: 37 38 39 41 42 43 44
    additive_expression <expression_node> (67)
        on left: 45 46 47
        on right: 40 41 42 43 44 46 47
    multiplicative_expression <expression_node> (68)
        on left: 48 49 50 51
        on right: 45 46 47 49 50 51
    unary_expression <expression_node> (69)
        on left: 52 53 54
        on right: 48 49 50 51 53 54
    primary_expression <expression_node> (70)
        on left: 55 56 57 58 59 60 61 62 63
        on right: 52
    identifier <identifier_node> (71)
        on left: 64
        on right: 5 6 17 18 19 24 25 61 62
    integer_literal <literal_node> (72)
        on left: 65
        on right: 55
    float_literal <literal_node> (73)
        on left: 66
        on right: 56
    char_literal <literal_node> (74)
        on left: 67
        on right: 57
    string_literal <literal_node> (75)
        on left: 68
        on right: 58


State 0

    0 $accept: • program $end

    TOKEN_CLASS  shift, and go to state 1

    program            go to state 2
    class_declaration  go to state 3


State 1

    5 class_declaration: TOKEN_CLASS • identifier TOKEN_LBRACE class_body_items TOKEN_RBRACE

    TOKEN_ID  shift, and go to state 4

    identifier  go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: class_declaration •

    $default  reduce using rule 1 (program)


State 4

   64 identifier: TOKEN_ID •

    $default  reduce using rule 64 (identifier)


State 5

    5 class_declaration: TOKEN_CLASS identifier • TOKEN_LBRACE class_body_items TOKEN_RBRACE

    TOKEN_LBRACE  shift, and go to state 7


State 6

    0 $accept: program $end •

    $default  accept


State 7

    5 class_declaration: TOKEN_CLASS identifier TOKEN_LBRACE • class_body_items TOKEN_RBRACE

    $default  reduce using rule 2 (class_body_items)

    class_body_items  go to state 8


State 8

    3 class_body_items: class_body_items • variable_declaration TOKEN_SEMICOLON
    4                 | class_body_items • main_method_declaration
    5 class_declaration: TOKEN_CLASS identifier TOKEN_LBRACE class_body_items • TOKEN_RBRACE

    TOKEN_PUBLIC   shift, and go to state 9
    TOKEN_INT      shift, and go to state 10
    TOKEN_CHAR     shift, and go to state 11
    TOKEN_BOOLEAN  shift, and go to state 12
    TOKEN_FINAL    shift, and go to state 13
    TOKEN_RBRACE   shift, and go to state 14

    main_method_declaration  go to state 15
    variable_declaration     go to state 16
    type                     go to state 17


State 9

    6 main_method_declaration: TOKEN_PUBLIC • TOKEN_STATIC TOKEN_VOID identifier TOKEN_LPAREN TOKEN_RPAREN block_statement_core

    TOKEN_STATIC  shift, and go to state 18


State 10

   20 type: TOKEN_INT •
   23     | TOKEN_INT • TOKEN_LBRACKET TOKEN_RBRACKET

    TOKEN_LBRACKET  shift, and go to state 19

    $default  reduce using rule 20 (type)


State 11

   21 type: TOKEN_CHAR •

    $default  reduce using rule 21 (type)


State 12

   22 type: TOKEN_BOOLEAN •

    $default  reduce using rule 22 (type)


State 13

   19 variable_declaration: TOKEN_FINAL • type identifier TOKEN_ASSIGN expression

    TOKEN_INT      shift, and go to state 10
    TOKEN_CHAR     shift, and go to state 11
    TOKEN_BOOLEAN  shift, and go to state 12

    type  go to state 20


State 14

    5 class_declaration: TOKEN_CLASS identifier TOKEN_LBRACE class_body_items TOKEN_RBRACE •

    $default  reduce using rule 5 (class_declaration)


State 15

    4 class_body_items: class_body_items main_method_declaration •

    $default  reduce using rule 4 (class_body_items)


State 16

    3 class_body_items: class_body_items variable_declaration • TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 21


State 17

   17 variable_declaration: type • identifier
   18                     | type • identifier TOKEN_ASSIGN expression

    TOKEN_ID  shift, and go to state 4

    identifier  go to state 22


State 18

    6 main_method_declaration: TOKEN_PUBLIC TOKEN_STATIC • TOKEN_VOID identifier TOKEN_LPAREN TOKEN_RPAREN block_statement_core

    TOKEN_VOID  shift, and go to state 23


State 19

   23 type: TOKEN_INT TOKEN_LBRACKET • TOKEN_RBRACKET

    TOKEN_RBRACKET  shift, and go to state 24


State 20

   19 variable_declaration: TOKEN_FINAL type • identifier TOKEN_ASSIGN expression

    TOKEN_ID  shift, and go to state 4

    identifier  go to state 25


State 21

    3 class_body_items: class_body_items variable_declaration TOKEN_SEMICOLON •

    $default  reduce using rule 3 (class_body_items)


State 22

   17 variable_declaration: type identifier •
   18                     | type identifier • TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 26

    $default  reduce using rule 17 (variable_declaration)


State 23

    6 main_method_declaration: TOKEN_PUBLIC TOKEN_STATIC TOKEN_VOID • identifier TOKEN_LPAREN TOKEN_RPAREN block_statement_core

    TOKEN_ID  shift, and go to state 4

    identifier  go to state 27


State 24

   23 type: TOKEN_INT TOKEN_LBRACKET TOKEN_RBRACKET •

    $default  reduce using rule 23 (type)


State 25

   19 variable_declaration: TOKEN_FINAL type identifier • TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 28


State 26

   18 variable_declaration: type identifier TOKEN_ASSIGN • expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    expression                 go to state 38
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 27

    6 main_method_declaration: TOKEN_PUBLIC TOKEN_STATIC TOKEN_VOID identifier • TOKEN_LPAREN TOKEN_RPAREN block_statement_core

    TOKEN_LPAREN  shift, and go to state 52


State 28

   19 variable_declaration: TOKEN_FINAL type identifier TOKEN_ASSIGN • expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    expression                 go to state 53
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 29

   65 integer_literal: TOKEN_INT_LIT •

    $default  reduce using rule 65 (integer_literal)


State 30

   66 float_literal: TOKEN_FLOAT_LIT •

    $default  reduce using rule 66 (float_literal)


State 31

   67 char_literal: TOKEN_CHAR_LIT •

    $default  reduce using rule 67 (char_literal)


State 32

   68 string_literal: TOKEN_STRING_LIT •

    $default  reduce using rule 68 (string_literal)


State 33

   59 primary_expression: TOKEN_TRUE •

    $default  reduce using rule 59 (primary_expression)


State 34

   60 primary_expression: TOKEN_FALSE •

    $default  reduce using rule 60 (primary_expression)


State 35

   53 unary_expression: TOKEN_MINUS • unary_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    unary_expression    go to state 54
    primary_expression  go to state 46
    identifier          go to state 47
    integer_literal     go to state 48
    float_literal       go to state 49
    char_literal        go to state 50
    string_literal      go to state 51


State 36

   54 unary_expression: TOKEN_NOT • unary_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    unary_expression    go to state 55
    primary_expression  go to state 46
    identifier          go to state 47
    integer_literal     go to state 48
    float_literal       go to state 49
    char_literal        go to state 50
    string_literal      go to state 51


State 37

   63 primary_expression: TOKEN_LPAREN • expression TOKEN_RPAREN

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    expression                 go to state 56
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 38

   18 variable_declaration: type identifier TOKEN_ASSIGN expression •

    $default  reduce using rule 18 (variable_declaration)


State 39

   32 expression: logical_or_expression •
   34 logical_or_expression: logical_or_expression • TOKEN_OR logical_and_expression

    TOKEN_OR  shift, and go to state 57

    $default  reduce using rule 32 (expression)


State 40

   33 logical_or_expression: logical_and_expression •
   36 logical_and_expression: logical_and_expression • TOKEN_AND equality_expression

    TOKEN_AND  shift, and go to state 58

    $default  reduce using rule 33 (logical_or_expression)


State 41

   35 logical_and_expression: equality_expression •
   38 equality_expression: equality_expression • TOKEN_EQ relational_expression
   39                    | equality_expression • TOKEN_NEQ relational_expression

    TOKEN_EQ   shift, and go to state 59
    TOKEN_NEQ  shift, and go to state 60

    $default  reduce using rule 35 (logical_and_expression)


State 42

   37 equality_expression: relational_expression •
   41 relational_expression: relational_expression • TOKEN_LT additive_expression
   42                      | relational_expression • TOKEN_GT additive_expression
   43                      | relational_expression • TOKEN_LEQ additive_expression
   44                      | relational_expression • TOKEN_GEQ additive_expression

    TOKEN_LT   shift, and go to state 61
    TOKEN_GT   shift, and go to state 62
    TOKEN_LEQ  shift, and go to state 63
    TOKEN_GEQ  shift, and go to state 64

    $default  reduce using rule 37 (equality_expression)


State 43

   40 relational_expression: additive_expression •
   46 additive_expression: additive_expression • TOKEN_PLUS multiplicative_expression
   47                    | additive_expression • TOKEN_MINUS multiplicative_expression

    TOKEN_PLUS   shift, and go to state 65
    TOKEN_MINUS  shift, and go to state 66

    $default  reduce using rule 40 (relational_expression)


State 44

   45 additive_expression: multiplicative_expression •
   49 multiplicative_expression: multiplicative_expression • TOKEN_MULTIPLY unary_expression
   50                          | multiplicative_expression • TOKEN_DIVIDE unary_expression
   51                          | multiplicative_expression • TOKEN_MOD unary_expression

    TOKEN_MULTIPLY  shift, and go to state 67
    TOKEN_DIVIDE    shift, and go to state 68
    TOKEN_MOD       shift, and go to state 69

    $default  reduce using rule 45 (additive_expression)


State 45

   48 multiplicative_expression: unary_expression •

    $default  reduce using rule 48 (multiplicative_expression)


State 46

   52 unary_expression: primary_expression •

    $default  reduce using rule 52 (unary_expression)


State 47

   61 primary_expression: identifier •
   62                   | identifier • TOKEN_LBRACKET expression TOKEN_RBRACKET

    TOKEN_LBRACKET  shift, and go to state 70

    $default  reduce using rule 61 (primary_expression)


State 48

   55 primary_expression: integer_literal •

    $default  reduce using rule 55 (primary_expression)


State 49

   56 primary_expression: float_literal •

    $default  reduce using rule 56 (primary_expression)


State 50

   57 primary_expression: char_literal •

    $default  reduce using rule 57 (primary_expression)


State 51

   58 primary_expression: string_literal •

    $default  reduce using rule 58 (primary_expression)


State 52

    6 main_method_declaration: TOKEN_PUBLIC TOKEN_STATIC TOKEN_VOID identifier TOKEN_LPAREN • TOKEN_RPAREN block_statement_core

    TOKEN_RPAREN  shift, and go to state 71


State 53

   19 variable_declaration: TOKEN_FINAL type identifier TOKEN_ASSIGN expression •

    $default  reduce using rule 19 (variable_declaration)


State 54

   53 unary_expression: TOKEN_MINUS unary_expression •

    $default  reduce using rule 53 (unary_expression)


State 55

   54 unary_expression: TOKEN_NOT unary_expression •

    $default  reduce using rule 54 (unary_expression)


State 56

   63 primary_expression: TOKEN_LPAREN expression • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 72


State 57

   34 logical_or_expression: logical_or_expression TOKEN_OR • logical_and_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    logical_and_expression     go to state 73
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 58

   36 logical_and_expression: logical_and_expression TOKEN_AND • equality_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    equality_expression        go to state 74
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 59

   38 equality_expression: equality_expression TOKEN_EQ • relational_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    relational_expression      go to state 75
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 60

   39 equality_expression: equality_expression TOKEN_NEQ • relational_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    relational_expression      go to state 76
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 61

   41 relational_expression: relational_expression TOKEN_LT • additive_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    additive_expression        go to state 77
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 62

   42 relational_expression: relational_expression TOKEN_GT • additive_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    additive_expression        go to state 78
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 63

   43 relational_expression: relational_expression TOKEN_LEQ • additive_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    additive_expression        go to state 79
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 64

   44 relational_expression: relational_expression TOKEN_GEQ • additive_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    additive_expression        go to state 80
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 65

   46 additive_expression: additive_expression TOKEN_PLUS • multiplicative_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    multiplicative_expression  go to state 81
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 66

   47 additive_expression: additive_expression TOKEN_MINUS • multiplicative_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    multiplicative_expression  go to state 82
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 67

   49 multiplicative_expression: multiplicative_expression TOKEN_MULTIPLY • unary_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    unary_expression    go to state 83
    primary_expression  go to state 46
    identifier          go to state 47
    integer_literal     go to state 48
    float_literal       go to state 49
    char_literal        go to state 50
    string_literal      go to state 51


State 68

   50 multiplicative_expression: multiplicative_expression TOKEN_DIVIDE • unary_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    unary_expression    go to state 84
    primary_expression  go to state 46
    identifier          go to state 47
    integer_literal     go to state 48
    float_literal       go to state 49
    char_literal        go to state 50
    string_literal      go to state 51


State 69

   51 multiplicative_expression: multiplicative_expression TOKEN_MOD • unary_expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    unary_expression    go to state 85
    primary_expression  go to state 46
    identifier          go to state 47
    integer_literal     go to state 48
    float_literal       go to state 49
    char_literal        go to state 50
    string_literal      go to state 51


State 70

   62 primary_expression: identifier TOKEN_LBRACKET • expression TOKEN_RBRACKET

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    expression                 go to state 86
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 71

    6 main_method_declaration: TOKEN_PUBLIC TOKEN_STATIC TOKEN_VOID identifier TOKEN_LPAREN TOKEN_RPAREN • block_statement_core

    TOKEN_LBRACE  shift, and go to state 87

    block_statement_core  go to state 88


State 72

   63 primary_expression: TOKEN_LPAREN expression TOKEN_RPAREN •

    $default  reduce using rule 63 (primary_expression)


State 73

   34 logical_or_expression: logical_or_expression TOKEN_OR logical_and_expression •
   36 logical_and_expression: logical_and_expression • TOKEN_AND equality_expression

    TOKEN_AND  shift, and go to state 58

    $default  reduce using rule 34 (logical_or_expression)


State 74

   36 logical_and_expression: logical_and_expression TOKEN_AND equality_expression •
   38 equality_expression: equality_expression • TOKEN_EQ relational_expression
   39                    | equality_expression • TOKEN_NEQ relational_expression

    TOKEN_EQ   shift, and go to state 59
    TOKEN_NEQ  shift, and go to state 60

    $default  reduce using rule 36 (logical_and_expression)


State 75

   38 equality_expression: equality_expression TOKEN_EQ relational_expression •
   41 relational_expression: relational_expression • TOKEN_LT additive_expression
   42                      | relational_expression • TOKEN_GT additive_expression
   43                      | relational_expression • TOKEN_LEQ additive_expression
   44                      | relational_expression • TOKEN_GEQ additive_expression

    TOKEN_LT   shift, and go to state 61
    TOKEN_GT   shift, and go to state 62
    TOKEN_LEQ  shift, and go to state 63
    TOKEN_GEQ  shift, and go to state 64

    $default  reduce using rule 38 (equality_expression)


State 76

   39 equality_expression: equality_expression TOKEN_NEQ relational_expression •
   41 relational_expression: relational_expression • TOKEN_LT additive_expression
   42                      | relational_expression • TOKEN_GT additive_expression
   43                      | relational_expression • TOKEN_LEQ additive_expression
   44                      | relational_expression • TOKEN_GEQ additive_expression

    TOKEN_LT   shift, and go to state 61
    TOKEN_GT   shift, and go to state 62
    TOKEN_LEQ  shift, and go to state 63
    TOKEN_GEQ  shift, and go to state 64

    $default  reduce using rule 39 (equality_expression)


State 77

   41 relational_expression: relational_expression TOKEN_LT additive_expression •
   46 additive_expression: additive_expression • TOKEN_PLUS multiplicative_expression
   47                    | additive_expression • TOKEN_MINUS multiplicative_expression

    TOKEN_PLUS   shift, and go to state 65
    TOKEN_MINUS  shift, and go to state 66

    $default  reduce using rule 41 (relational_expression)


State 78

   42 relational_expression: relational_expression TOKEN_GT additive_expression •
   46 additive_expression: additive_expression • TOKEN_PLUS multiplicative_expression
   47                    | additive_expression • TOKEN_MINUS multiplicative_expression

    TOKEN_PLUS   shift, and go to state 65
    TOKEN_MINUS  shift, and go to state 66

    $default  reduce using rule 42 (relational_expression)


State 79

   43 relational_expression: relational_expression TOKEN_LEQ additive_expression •
   46 additive_expression: additive_expression • TOKEN_PLUS multiplicative_expression
   47                    | additive_expression • TOKEN_MINUS multiplicative_expression

    TOKEN_PLUS   shift, and go to state 65
    TOKEN_MINUS  shift, and go to state 66

    $default  reduce using rule 43 (relational_expression)


State 80

   44 relational_expression: relational_expression TOKEN_GEQ additive_expression •
   46 additive_expression: additive_expression • TOKEN_PLUS multiplicative_expression
   47                    | additive_expression • TOKEN_MINUS multiplicative_expression

    TOKEN_PLUS   shift, and go to state 65
    TOKEN_MINUS  shift, and go to state 66

    $default  reduce using rule 44 (relational_expression)


State 81

   46 additive_expression: additive_expression TOKEN_PLUS multiplicative_expression •
   49 multiplicative_expression: multiplicative_expression • TOKEN_MULTIPLY unary_expression
   50                          | multiplicative_expression • TOKEN_DIVIDE unary_expression
   51                          | multiplicative_expression • TOKEN_MOD unary_expression

    TOKEN_MULTIPLY  shift, and go to state 67
    TOKEN_DIVIDE    shift, and go to state 68
    TOKEN_MOD       shift, and go to state 69

    $default  reduce using rule 46 (additive_expression)


State 82

   47 additive_expression: additive_expression TOKEN_MINUS multiplicative_expression •
   49 multiplicative_expression: multiplicative_expression • TOKEN_MULTIPLY unary_expression
   50                          | multiplicative_expression • TOKEN_DIVIDE unary_expression
   51                          | multiplicative_expression • TOKEN_MOD unary_expression

    TOKEN_MULTIPLY  shift, and go to state 67
    TOKEN_DIVIDE    shift, and go to state 68
    TOKEN_MOD       shift, and go to state 69

    $default  reduce using rule 47 (additive_expression)


State 83

   49 multiplicative_expression: multiplicative_expression TOKEN_MULTIPLY unary_expression •

    $default  reduce using rule 49 (multiplicative_expression)


State 84

   50 multiplicative_expression: multiplicative_expression TOKEN_DIVIDE unary_expression •

    $default  reduce using rule 50 (multiplicative_expression)


State 85

   51 multiplicative_expression: multiplicative_expression TOKEN_MOD unary_expression •

    $default  reduce using rule 51 (multiplicative_expression)


State 86

   62 primary_expression: identifier TOKEN_LBRACKET expression • TOKEN_RBRACKET

    TOKEN_RBRACKET  shift, and go to state 89


State 87

   16 block_statement_core: TOKEN_LBRACE • statements TOKEN_RBRACE

    TOKEN_ID       shift, and go to state 4
    TOKEN_INT      shift, and go to state 10
    TOKEN_CHAR     shift, and go to state 11
    TOKEN_BOOLEAN  shift, and go to state 12
    TOKEN_IF       shift, and go to state 90
    TOKEN_WHILE    shift, and go to state 91
    TOKEN_RETURN   shift, and go to state 92
    TOKEN_FINAL    shift, and go to state 13
    TOKEN_PRINT    shift, and go to state 93
    TOKEN_LBRACE   shift, and go to state 87

    $default  reduce using rule 7 (statements)

    statements             go to state 94
    statement              go to state 95
    block_statement_core   go to state 96
    variable_declaration   go to state 97
    type                   go to state 17
    assignment_core        go to state 98
    if_statement_core      go to state 99
    while_statement_core   go to state 100
    print_statement_core   go to state 101
    return_statement_core  go to state 102
    identifier             go to state 103


State 88

    6 main_method_declaration: TOKEN_PUBLIC TOKEN_STATIC TOKEN_VOID identifier TOKEN_LPAREN TOKEN_RPAREN block_statement_core •

    $default  reduce using rule 6 (main_method_declaration)


State 89

   62 primary_expression: identifier TOKEN_LBRACKET expression TOKEN_RBRACKET •

    $default  reduce using rule 62 (primary_expression)


State 90

   26 if_statement_core: TOKEN_IF • TOKEN_LPAREN expression TOKEN_RPAREN statement
   27                  | TOKEN_IF • TOKEN_LPAREN expression TOKEN_RPAREN statement TOKEN_ELSE statement

    TOKEN_LPAREN  shift, and go to state 104


State 91

   28 while_statement_core: TOKEN_WHILE • TOKEN_LPAREN expression TOKEN_RPAREN statement

    TOKEN_LPAREN  shift, and go to state 105


State 92

   30 return_statement_core: TOKEN_RETURN •
   31                      | TOKEN_RETURN • expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    $default  reduce using rule 30 (return_statement_core)

    expression                 go to state 106
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 93

   29 print_statement_core: TOKEN_PRINT • TOKEN_LPAREN expression TOKEN_RPAREN

    TOKEN_LPAREN  shift, and go to state 107


State 94

   16 block_statement_core: TOKEN_LBRACE statements • TOKEN_RBRACE

    TOKEN_RBRACE  shift, and go to state 108


State 95

    8 statements: statement • statements

    TOKEN_ID       shift, and go to state 4
    TOKEN_INT      shift, and go to state 10
    TOKEN_CHAR     shift, and go to state 11
    TOKEN_BOOLEAN  shift, and go to state 12
    TOKEN_IF       shift, and go to state 90
    TOKEN_WHILE    shift, and go to state 91
    TOKEN_RETURN   shift, and go to state 92
    TOKEN_FINAL    shift, and go to state 13
    TOKEN_PRINT    shift, and go to state 93
    TOKEN_LBRACE   shift, and go to state 87

    $default  reduce using rule 7 (statements)

    statements             go to state 109
    statement              go to state 95
    block_statement_core   go to state 96
    variable_declaration   go to state 97
    type                   go to state 17
    assignment_core        go to state 98
    if_statement_core      go to state 99
    while_statement_core   go to state 100
    print_statement_core   go to state 101
    return_statement_core  go to state 102
    identifier             go to state 103


State 96

   15 statement: block_statement_core •

    $default  reduce using rule 15 (statement)


State 97

    9 statement: variable_declaration • TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 110


State 98

   10 statement: assignment_core • TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 111


State 99

   11 statement: if_statement_core •

    $default  reduce using rule 11 (statement)


State 100

   12 statement: while_statement_core •

    $default  reduce using rule 12 (statement)


State 101

   13 statement: print_statement_core • TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 112


State 102

   14 statement: return_statement_core • TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 113


State 103

   24 assignment_core: identifier • TOKEN_ASSIGN expression
   25                | identifier • TOKEN_LBRACKET expression TOKEN_RBRACKET TOKEN_ASSIGN expression

    TOKEN_ASSIGN    shift, and go to state 114
    TOKEN_LBRACKET  shift, and go to state 115


State 104

   26 if_statement_core: TOKEN_IF TOKEN_LPAREN • expression TOKEN_RPAREN statement
   27                  | TOKEN_IF TOKEN_LPAREN • expression TOKEN_RPAREN statement TOKEN_ELSE statement

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    expression                 go to state 116
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 105

   28 while_statement_core: TOKEN_WHILE TOKEN_LPAREN • expression TOKEN_RPAREN statement

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    expression                 go to state 117
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 106

   31 return_statement_core: TOKEN_RETURN expression •

    $default  reduce using rule 31 (return_statement_core)


State 107

   29 print_statement_core: TOKEN_PRINT TOKEN_LPAREN • expression TOKEN_RPAREN

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    expression                 go to state 118
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 108

   16 block_statement_core: TOKEN_LBRACE statements TOKEN_RBRACE •

    $default  reduce using rule 16 (block_statement_core)


State 109

    8 statements: statement statements •

    $default  reduce using rule 8 (statements)


State 110

    9 statement: variable_declaration TOKEN_SEMICOLON •

    $default  reduce using rule 9 (statement)


State 111

   10 statement: assignment_core TOKEN_SEMICOLON •

    $default  reduce using rule 10 (statement)


State 112

   13 statement: print_statement_core TOKEN_SEMICOLON •

    $default  reduce using rule 13 (statement)


State 113

   14 statement: return_statement_core TOKEN_SEMICOLON •

    $default  reduce using rule 14 (statement)


State 114

   24 assignment_core: identifier TOKEN_ASSIGN • expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    expression                 go to state 119
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 115

   25 assignment_core: identifier TOKEN_LBRACKET • expression TOKEN_RBRACKET TOKEN_ASSIGN expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    expression                 go to state 120
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 116

   26 if_statement_core: TOKEN_IF TOKEN_LPAREN expression • TOKEN_RPAREN statement
   27                  | TOKEN_IF TOKEN_LPAREN expression • TOKEN_RPAREN statement TOKEN_ELSE statement

    TOKEN_RPAREN  shift, and go to state 121


State 117

   28 while_statement_core: TOKEN_WHILE TOKEN_LPAREN expression • TOKEN_RPAREN statement

    TOKEN_RPAREN  shift, and go to state 122


State 118

   29 print_statement_core: TOKEN_PRINT TOKEN_LPAREN expression • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 123


State 119

   24 assignment_core: identifier TOKEN_ASSIGN expression •

    $default  reduce using rule 24 (assignment_core)


State 120

   25 assignment_core: identifier TOKEN_LBRACKET expression • TOKEN_RBRACKET TOKEN_ASSIGN expression

    TOKEN_RBRACKET  shift, and go to state 124


State 121

   26 if_statement_core: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN • statement
   27                  | TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN • statement TOKEN_ELSE statement

    TOKEN_ID       shift, and go to state 4
    TOKEN_INT      shift, and go to state 10
    TOKEN_CHAR     shift, and go to state 11
    TOKEN_BOOLEAN  shift, and go to state 12
    TOKEN_IF       shift, and go to state 90
    TOKEN_WHILE    shift, and go to state 91
    TOKEN_RETURN   shift, and go to state 92
    TOKEN_FINAL    shift, and go to state 13
    TOKEN_PRINT    shift, and go to state 93
    TOKEN_LBRACE   shift, and go to state 87

    statement              go to state 125
    block_statement_core   go to state 96
    variable_declaration   go to state 97
    type                   go to state 17
    assignment_core        go to state 98
    if_statement_core      go to state 99
    while_statement_core   go to state 100
    print_statement_core   go to state 101
    return_statement_core  go to state 102
    identifier             go to state 103


State 122

   28 while_statement_core: TOKEN_WHILE TOKEN_LPAREN expression TOKEN_RPAREN • statement

    TOKEN_ID       shift, and go to state 4
    TOKEN_INT      shift, and go to state 10
    TOKEN_CHAR     shift, and go to state 11
    TOKEN_BOOLEAN  shift, and go to state 12
    TOKEN_IF       shift, and go to state 90
    TOKEN_WHILE    shift, and go to state 91
    TOKEN_RETURN   shift, and go to state 92
    TOKEN_FINAL    shift, and go to state 13
    TOKEN_PRINT    shift, and go to state 93
    TOKEN_LBRACE   shift, and go to state 87

    statement              go to state 126
    block_statement_core   go to state 96
    variable_declaration   go to state 97
    type                   go to state 17
    assignment_core        go to state 98
    if_statement_core      go to state 99
    while_statement_core   go to state 100
    print_statement_core   go to state 101
    return_statement_core  go to state 102
    identifier             go to state 103


State 123

   29 print_statement_core: TOKEN_PRINT TOKEN_LPAREN expression TOKEN_RPAREN •

    $default  reduce using rule 29 (print_statement_core)


State 124

   25 assignment_core: identifier TOKEN_LBRACKET expression TOKEN_RBRACKET • TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 127


State 125

   26 if_statement_core: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN statement •
   27                  | TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN statement • TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 128

    $default  reduce using rule 26 (if_statement_core)


State 126

   28 while_statement_core: TOKEN_WHILE TOKEN_LPAREN expression TOKEN_RPAREN statement •

    $default  reduce using rule 28 (while_statement_core)


State 127

   25 assignment_core: identifier TOKEN_LBRACKET expression TOKEN_RBRACKET TOKEN_ASSIGN • expression

    TOKEN_INT_LIT     shift, and go to state 29
    TOKEN_FLOAT_LIT   shift, and go to state 30
    TOKEN_CHAR_LIT    shift, and go to state 31
    TOKEN_STRING_LIT  shift, and go to state 32
    TOKEN_ID          shift, and go to state 4
    TOKEN_TRUE        shift, and go to state 33
    TOKEN_FALSE       shift, and go to state 34
    TOKEN_MINUS       shift, and go to state 35
    TOKEN_NOT         shift, and go to state 36
    TOKEN_LPAREN      shift, and go to state 37

    expression                 go to state 129
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    primary_expression         go to state 46
    identifier                 go to state 47
    integer_literal            go to state 48
    float_literal              go to state 49
    char_literal               go to state 50
    string_literal             go to state 51


State 128

   27 if_statement_core: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN statement TOKEN_ELSE • statement

    TOKEN_ID       shift, and go to state 4
    TOKEN_INT      shift, and go to state 10
    TOKEN_CHAR     shift, and go to state 11
    TOKEN_BOOLEAN  shift, and go to state 12
    TOKEN_IF       shift, and go to state 90
    TOKEN_WHILE    shift, and go to state 91
    TOKEN_RETURN   shift, and go to state 92
    TOKEN_FINAL    shift, and go to state 13
    TOKEN_PRINT    shift, and go to state 93
    TOKEN_LBRACE   shift, and go to state 87

    statement              go to state 130
    block_statement_core   go to state 96
    variable_declaration   go to state 97
    type                   go to state 17
    assignment_core        go to state 98
    if_statement_core      go to state 99
    while_statement_core   go to state 100
    print_statement_core   go to state 101
    return_statement_core  go to state 102
    identifier             go to state 103


State 129

   25 assignment_core: identifier TOKEN_LBRACKET expression TOKEN_RBRACKET TOKEN_ASSIGN expression •

    $default  reduce using rule 25 (assignment_core)


State 130

   27 if_statement_core: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN statement TOKEN_ELSE statement •

    $default  reduce using rule 27 (if_statement_core)
